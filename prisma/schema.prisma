// prisma/schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

/* ========= NextAuth core models ========= */

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  username       String?   @unique

  accounts       Account[]
  sessions       Session[]
  playerStats    PlayerStats?
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String

  refresh_token     String? @map("refresh_token")
  access_token      String? @map("access_token")
  expires_at        Int?    @map("expires_at")
  token_type        String? @map("token_type")
  scope             String?
  id_token          String? @map("id_token")
  session_state     String? @map("session_state")
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

/* ========= Your game stats ========= */

model PlayerStats {
  userId               String  @id
  user                 User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  totalWords           Int     @default(0)
  uniqueWords          Int     @default(0)
  animals              Int     @default(0)
  countries            Int     @default(0)
  names                Int     @default(0)
  sameLetterWords      Int     @default(0)
  switches             Int     @default(0)
  linksEarned          Int     @default(0)
  linksSpent           Int     @default(0)

  bestScore            Int     @default(0)
  longestChain         Int     @default(0)
  highestMultiplier    Int     @default(0)
  longestAnimalStreak  Int     @default(0)
  longestCountryStreak Int     @default(0)
  longestNameStreak    Int     @default(0)

  badges               Int     @default(0)

  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}
